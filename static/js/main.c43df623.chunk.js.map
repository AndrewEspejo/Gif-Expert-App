{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","hooks/useFetchGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cats","find","x","type","value","onChange","e","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAuB9C,OACI,0BAAMC,SAjBW,SAACC,GAClBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAIX,OAFcA,EAAKC,MAAK,SAACC,GAAD,OAAOA,IAAMT,KAEnB,YAAIO,GAEhB,CAAEP,GAAR,mBAAuBO,OAE3BN,EAAc,OAMd,2BACIS,KAAK,OACLC,MAAOX,EACPY,SAzBc,SAACC,GACvBZ,EAAcY,EAAEC,OAAOH,Y,uBCRlBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAClDH,GAFe,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCqBLO,EAlBM,SAACf,GAAc,IAAD,EACLjB,mBAAS,CAC/BwB,KAAM,GACNS,SAAS,IAHkB,mBACxBC,EADwB,KACjBC,EADiB,KAe/B,OATAC,qBAAU,WACNpB,EAAQC,GAAUoB,MAAK,SAACC,GACpBH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGlB,CAAChB,IAEGiB,GCfEK,G,KAAc,SAAC,GAAuB,EAArBX,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKqB,UAAU,0CACX,yBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,2BAAIA,MCHHc,EAAU,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EACHe,EAAaf,GAAjCa,EADuB,EAC7BN,KAAcS,EADe,EACfA,QAEtB,OACI,oCACI,wBAAIO,UAAU,qCAAqCvB,GAClDgB,GACG,uBAAGO,UAAU,oCAAb,WAEJ,yBAAKA,UAAU,aACVV,EAAOJ,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UCVrCkB,EAAe,WAAM,MAEM7C,mBAAS,CAAC,cAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAM9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACK+C,EAAWpB,KAAI,SAACT,GACb,OAAO,kBAAC,EAAD,CAASA,SAAUA,EAAU2B,IAAK3B,UCb7D8B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.c43df623.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories((cats) => {\n                // Aquí verificas si existe la categoria.\n                const exist = cats.find((x) => x === inputValue);\n                // Si existe, retornas las categorías ya existentes.\n                if (exist) return [...cats];\n\n                return [inputValue, ...cats];\n            });\n            setInputValue('');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n        category\n    )}&limit=10&api_key=sA3cMqGEaxRD7MFHUxCN2TKWEjHGZIE9`;\n    const resp = await fetch(url);\n\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        };\n    });\n\n    return gifs;\n    //setImgs\n};\n//getGifs();\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nconst useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n        getGifs(category).then((imgs) => {\n            setState({\n                data: imgs,\n                loading: false,\n            });\n        });\n    }, [category]);\n\n    return state; // {data:[], loading:true}\n};\n\nexport default useFetchGifs;\n","import React from 'react';\nimport '../assets/styles/index.css';\n\nexport const GifGridItem = ({ id, title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    );\n};\n","import React from 'react';\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\n            {loading && (\n                <p className=\"animate__animated animate__flash\">Loading</p>\n            )}\n            <div className=\"card-grid\">\n                {images.map((img) => (\n                    <GifGridItem key={img.id} {...img} />\n                ))}\n            </div>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { AddCategory } from \"./AddCategory\";\nimport { GifGrid } from \"./GifGrid\";\n\nexport const GifExpertApp = () => {\n    // const categories = [\"One Piece\", \"Dragon Ball\", \"Naruto\"];\n    const [categories, setCategories] = useState([\"One Piece\"]);\n    // const handleAdd = () => {\n    //     setCategories([\"Bleach\", ...categories]);\n    // };\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ul>\n                {categories.map((category) => {\n                    return <GifGrid category={category} key={category} />;\n                })}\n            </ul>\n        </>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./components/GifExpertApp\";\nimport \"./assets/styles/index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}